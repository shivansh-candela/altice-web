diff --git a/libs/lanforge/lf_tools.py b/libs/lanforge/lf_tools.py
index 889098f4..cb61397e 100755
--- a/libs/lanforge/lf_tools.py
+++ b/libs/lanforge/lf_tools.py
@@ -841,7 +841,7 @@ class ChamberView:
     # test_setup_info = Ap information and test information
     # input_setup_info = Is Support information ex. support@candelatech.com
     # data is realtime data
-    def create_dynamic_pdf(self, report_name=None, test_setup_info=None):
+    def create_dynamic_pdf(self, report_name=None, test_setup_info=None, result=None):
         png_path = "../reports/" + str(report_name) + "/kpi-chart-1.png"
         print(f"png_path: {png_path}")
 
@@ -870,7 +870,38 @@ class ChamberView:
                                                          "over-all throughput decrease as more stations are added.")
         report.build_objective()
 
-        report.test_setup_table(test_setup_data=test_setup_info, value="Device Under Test")
+        access_point = {
+            "ssid-name" : result["ssid-name"],
+            "security" : result["security"],
+            "security-key" : result["security-key"],
+            "band" : result["band"],
+            "channel" : result["channel"],
+        }
+
+        traffic_generator = {
+            "download-traffic" : result["test-download"],
+            "batch-size" : result["test-batch-size"],
+            "upload-rate" : result["test-upload-rate"],
+            "protocol" : result["test-protocol"],
+            "test-duration" : result["test-duration"],
+        }
+
+        result = {
+            "Result" : result["result"],
+            "expected-throughput" : result["expected-throughput"],
+            "actual-throughput" : result["actual-throughput"]
+        }
+
+        report.test_setup_table(test_setup_data=traffic_generator, value="Traffic Generator")
+        report.end_content_div()
+
+        report.test_setup_table(test_setup_data=access_point, value="Device Under Test")
+        report.end_content_div()
+
+        # report.set_table_title("<h3>: Testcase Result")
+        report.test_setup_table(test_setup_data=result, value="PASS/FAIL")
+
+        # report.build_table_title()
         report.end_content_div()
 
         report.build_text()
@@ -887,9 +918,9 @@ class ChamberView:
 
         report.build_custom()
         report.build_footer()
-        report.write_html()
-        report.write_pdf()
-
+        html_path = report.write_html()
+        pdf_path = report.write_pdf()
+        return pdf_path
 
     def create_mesh_scenario(self):
         # upstream_list = []
diff --git a/tests/e2e/basic/performance_tests/wifi_capacity_test/wifi_capacity_channel_country_uni/country_code_US_cli/channel_width_20Mhz/tcp_download_1G_single_client/wpa2_personal/fiveg_band/test_throughput_US_20Mhz_tcp_single_client_download_5g_wpa2_personal.py b/tests/e2e/basic/performance_tests/wifi_capacity_test/wifi_capacity_channel_country_uni/country_code_US_cli/channel_width_20Mhz/tcp_download_1G_single_client/wpa2_personal/fiveg_band/test_throughput_US_20Mhz_tcp_single_client_download_5g_wpa2_personal.py
index 9d6a0121..b9017f01 100644
--- a/tests/e2e/basic/performance_tests/wifi_capacity_test/wifi_capacity_channel_country_uni/country_code_US_cli/channel_width_20Mhz/tcp_download_1G_single_client/wpa2_personal/fiveg_band/test_throughput_US_20Mhz_tcp_single_client_download_5g_wpa2_personal.py
+++ b/tests/e2e/basic/performance_tests/wifi_capacity_test/wifi_capacity_channel_country_uni/country_code_US_cli/channel_width_20Mhz/tcp_download_1G_single_client/wpa2_personal/fiveg_band/test_throughput_US_20Mhz_tcp_single_client_download_5g_wpa2_personal.py
@@ -153,13 +153,42 @@ class TestCountryUS20Mhz5G(object):
         print(f"Download Traffic Throughput: {csv_val['Down']['DL Mbps - 1 STA']}")
         actual_throughput = csv_val['Down']['DL Mbps - 1 STA']
 
-        lf_tools.create_dynamic_pdf(report_name, get_configuration)
+        result = {
+
+            "result": None,
+            "ssid-name": ssid_name,
+            "security": security,
+            "security-key": security_key,
+            "band": band,
+            "channel": channel,
+            "description" : "WiFi capacity test",
+            "test-download" : "1Gbps",
+            "test-batch-size" : "1",
+            "test-upload-rate" : "0",
+            "test-protocol" : "TCP-IPV4",
+            "test-duration" : "60 Sec",
+            "expected-throughput": f" > {expected_throughput}",
+            "actual-throughput": actual_throughput
+        }
 
         if expected_throughput < float(actual_throughput):
+            result["result"] = "PASS"
+            pdf = lf_tools.create_dynamic_pdf(report_name, get_configuration, result)
+            print(f"pdf: {pdf}")
+            if os.path.exists(pdf):
+                allure.attach.file(source=pdf,
+                                   name="WiFi_Capacity_1GBPS_Download_Throughput_Test", attachment_type="PDF")
             assert True
         else:
+            result["result"] = "FAIL"
+            pdf = lf_tools.create_dynamic_pdf(report_name, get_configuration, result)
+            print(f"pdf: {pdf}")
+            if os.path.exists(pdf):
+                allure.attach.file(source=pdf,
+                                   name="WiFi_Capacity_1GBPS_Download_Throughput_Test", attachment_type="PDF")
             assert False
 
+
     @allure.testcase(url="https://telecominfraproject.atlassian.net/browse/WIFI-2546", name="WIFI-6938")
     @pytest.mark.wpa2_personal
     @pytest.mark.twentyMhz
