{"name": "test_client_nat_wpa2_chn1_20Mhz_US_2g_tcp_Bidirectional[setup_profiles0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'AController' object has no attribute 'use_ssh'", "trace": "request = <SubRequest 'setup_profiles' for <Function test_client_nat_wpa2_chn1_20Mhz_US_2g_tcp_Bidirectional[setup_profiles0]>>, setup_controller = '', testbed = 'testbed-new', get_equipment_ref = ['']\nfixtures_ver = <fixtures_4x.Fixtures_4x object at 0x7f0543b60130>, reset_scenario_lf = '', instantiate_profile = <class 'controller.controller_4x.controller.AController'>\nget_markers = {'fiveg': False, 'open': False, 'radius': False, 'twog': True, ...}, create_lanforge_chamberview_dut = 'AlticeAP', lf_tools = <lf_tools.ChamberView object at 0x7f0543b9ab20>, run_lf = False\nget_security_flags = ['open', 'wpa', 'wep', 'wpa2_personal', 'wpa3_personal', 'wpa3_personal_mixed', ...]\nget_configuration = {'access_point': [{'ap_password': 'DustBunnyRoundup9#', 'ap_prompt': 'root@GEN8', 'ap_username': 'admin', 'attached': ...G-Station-Name': 'altice_2.4', '5G-Radio': ['1.1.wiphy2'], '5G-Station-Name': 'altice_5', ...}, 'name': 'lanforge_53'}}\nradius_info = {'ip': '10.10.1.221', 'password': 'password', 'pk_password': 'whatever', 'port': 1812, ...}, get_apnos = <class 'apnos.apnos.APNOS'>\nradius_accounting_info = {'ip': '10.10.1.221', 'password': 'password', 'pk_password': 'whatever', 'port': 1813, ...}, cc_1 = False, al_1 = True\nget_all_markers = ['tcp_bidirectional', 'channel_1', 'twog', 'twentyMhz', 'wpa2_personal', 'allure_link', ...]\n\n>   ???\n\n/home/imgd/ctpriv-scripts/altice/wlan-testing/tests/e2e/basic/conftest.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixtures_4x.py:47: in setup_profiles\n    instantiate_profile_obj = instantiate_profile(get_configuration['access_point'][0],\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <controller.controller_4x.controller.AController object at 0x7f0543b379d0>, credentials = {'ap_password': 'DustBunnyRoundup9#', 'ap_prompt': 'root@GEN8', 'ap_username': 'admin', 'attached': True, ...}\npwd = './libs/apnos/', sdk = '2.x'\n\n    def __init__(self, credentials=\"\", pwd=os.getcwd(), sdk=\"2.x\"):\n        self.wifi_country_code_2g = None\n        self.bssid_country_code_5g = None\n        self.bssid_country_5g = None\n        self.wifi_country_2g = None\n        print(credentials)\n        self.expected_radio = None\n    \n        self.expected_security_2G = None\n        self.expected_channel_2G = None\n        self.expected_band_2G = None\n        self.expected_ssid_2G = None\n        self.expected_security_5G = None\n        self.expected_channel_5G = None\n        self.expected_band_5G = None\n        self.expected_ssid_5G = None\n    \n        self.ap_ssid_2G = None\n        self.ap_security_2G = None\n        self.ap_channel_2G = None\n        self.ap_band_2G = None\n    \n        self.ap_ssid_5G = None\n        self.ap_security_5G = None\n        self.ap_channel_5G = None\n        self.ap_band_5G = None\n    \n        self.bssid_detail_2g = None\n        self.bssid_detail_5g = None\n    \n        self.serial = credentials['serial']\n        self.ap_username = credentials['ap_username']\n        self.ap_password = credentials['ap_password']\n        self.ap_prompt = credentials['ap_prompt']\n    \n        print(\"IN APNOS: libs/apnos/apnos.py\")\n    \n        # self.owrt_args = \"--prompt \" + self.ap_prompt + \" -s serial --log stdout --user \" + self.ap_username + \" --passwd \" + self.ap_password\n        # self.sdk = sdk\n        # if sdk == \"2.x\":\n        #     self.owrt_args = \"--prompt \" + self.ap_prompt + self.serial + \" -s serial --log stdout --user \" + self.ap_username + \" --passwd \" + self.ap_password\n        if credentials is None:\n            print(\"No credentials Given\")\n            exit()\n        self.ip = credentials['ip']  # if mode=1, enter jumphost ip else ap ip address\n        self.username = credentials['username']  # if mode=1, enter jumphost username else ap username\n        self.password = credentials['password']  # if mode=1, enter jumphost password else ap password\n        self.port = credentials['port']  # if mode=1, enter jumphost ssh port else ap ssh port\n        self.mode = credentials['jumphost']  # 1 for jumphost, 0 for direct ssh\n    \n        if \"use_ssh\" in credentials:\n            self.use_ssh = credentials['use_ssh']\n    \n        if 'mode' in credentials:\n            self.type = credentials['mode']\n    \n    \n>       if not (self.use_ssh) and self.mode:\nE       AttributeError: 'AController' object has no attribute 'use_ssh'\n\n../libs/controller/controller_4x/controller.py:88: AttributeError"}, "description": "\n           pytest -m \"country_code and twentyMhz and wpa2 and twog and channel_1\"\n        ", "parameters": [{"name": "setup_profiles", "value": "{'mode': 'NAT', 'ssid_modes': {'wpa2_personal': [{'ssid_name': 'client_connectivity_al', 'appliedRadios': ['2G'], 'security_key': 'something'}]}, 'rf-2G-1': {'2G': {'band': '2G', 'country': 'US', 'channel-mode': 'VHT', 'channel-width': 20, 'channel': 1}}, 'rf-2G-6': {'2G': {'band': '2G', 'country': 'US', 'channel-mode': 'VHT', 'channel-width': 20, 'channel': 6}}, 'rf-2G-11': {'2G': {'band': '2G', 'country': 'US', 'channel-mode': 'VHT', 'channel-width': 20, 'channel': 11}}, 'radius': False, 'expected-throughput': 157.74}"}], "start": 1696930199116, "stop": 1696930199116, "uuid": "fb569f87-f03a-43fc-b518-6eb40743b591", "historyId": "9185113d5ef82106a12665b49dbcc48a", "testCaseId": "869268f614622471bff06ae7aa2c9aa3", "fullName": "e2e.basic.performance_tests.wifi_capacity_test.wifi_capacity_channel_country_uni.country_code_US_cli.channel_width_20Mhz.tcp_bidirectional_1G_single_client.wpa2_personal.twog_band.test_throughput_US_20Mhz_tcp_single_client_bidirectional_2G_wpa2_personal.TestCountryUS20Mhz2g#test_client_nat_wpa2_chn1_20Mhz_US_2g_tcp_Bidirectional", "labels": [{"name": "feature", "value": "NAT MODE CLIENT CONNECTIVITY"}, {"name": "tag", "value": "tcp_bidirectional"}, {"name": "tag", "value": "channel_1"}, {"name": "tag", "value": "twog"}, {"name": "tag", "value": "twentyMhz"}, {"name": "tag", "value": "wpa2_personal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "country_code"}, {"name": "tag", "value": "nat"}, {"name": "tag", "value": "wpa2"}, {"name": "tag", "value": "united_states"}, {"name": "tag", "value": "bandwidth_20mhz"}, {"name": "tag", "value": "al"}, {"name": "tag", "value": "tcp"}, {"name": "tag", "value": "wifi_capacity"}, {"name": "tag", "value": "wifi_capacity_test"}, {"name": "tag", "value": "bidirectional"}, {"name": "tag", "value": "wifi_capacity_single_client"}, {"name": "tag", "value": "wifi_capacity_wpa2_20mhz_all_channels_single_client_bidirectional_1gbps"}, {"name": "tag", "value": "throughput_wpa2_20mhz_all_channels_single_client_bidirectional_1gbps"}, {"name": "parentSuite", "value": "e2e.basic.performance_tests.wifi_capacity_test.wifi_capacity_channel_country_uni.country_code_US_cli.channel_width_20Mhz.tcp_bidirectional_1G_single_client.wpa2_personal.twog_band"}, {"name": "suite", "value": "test_throughput_US_20Mhz_tcp_single_client_bidirectional_2G_wpa2_personal"}, {"name": "subSuite", "value": "TestCountryUS20Mhz2g"}, {"name": "host", "value": "imgd"}, {"name": "thread", "value": "62035-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.performance_tests.wifi_capacity_test.wifi_capacity_channel_country_uni.country_code_US_cli.channel_width_20Mhz.tcp_bidirectional_1G_single_client.wpa2_personal.twog_band.test_throughput_US_20Mhz_tcp_single_client_bidirectional_2G_wpa2_personal"}], "links": [{"type": "test_case", "url": "https://telecominfraproject.atlassian.net/browse/WIFI-2546", "name": "WIFI-6938"}]}